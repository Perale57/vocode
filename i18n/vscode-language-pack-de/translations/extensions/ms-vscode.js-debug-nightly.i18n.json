{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Browserhaltepunkt hinzufügen",
			"attach.node.process": "An Node.js-Prozess anhängen (Vorschau)",
			"browser.address.description": "TCP/IP-Adresse des Debugports",
			"browser.baseUrl.description": "Die Basis-URL zum Auflösen von Pfaden (baseUrl). baseURL wird beim Zuordnen von URLs zu den Dateien auf dem Datenträger gekürzt. Der Standardwert ist die Start-URL-Domäne.",
			"browser.browserLaunchLocation.description": "Erzwingt, dass der Browser an einer einzigen Stelle gestartet wird. In einem Remotearbeitsbereich (beispielsweise über SSH oder WSL) kann diese Einstellung verwendet werden, um den Browser statt auf dem lokalen Computer auf dem Remotecomputer zu öffnen.",
			"browser.cwd.description": "Optionales Arbeitsverzeichnis für die ausführbare Runtimedatei.",
			"browser.disableNetworkCache.description": "Gibt ab, ob der Netzwerkcache für jede Anfrage übersprungen werden soll",
			"browser.env.description": "Optionales Wörterbuch der Umgebungs-Schlüssel-/Wert-Paare für den Browser.",
			"browser.file.description": "Eine lokale HTML-Datei zum Öffnen im Browser",
			"browser.includeDefaultArgs.description": "Gibt an, ob Standardargumente für den Browserstart (zum Deaktivieren von Features, die das Debuggen erschweren können) beim Start einbezogen werden.",
			"browser.inspectUri.description": "Format zum Umschreiben von inspectUri: Es handelt sich um eine Vorlagenzeichenfolge, die Schlüssel in {curlyBraces} interpoliert. Verfügbare Schlüssel sind:\n – url.* ist die analysierte Adresse der derzeit ausgeführten Anwendung, zum Beispiel: {url.port}, {url.hostname}.\n – port ist der Debugport, an dem Chrome lauscht.\n – browserInspectUri ist der Inspektor-URI im gestarteten Browser.\n – wsProtocol ist das angedeutete WebSocket-Protokoll. Dies wird auf \"wss\" festgelegt, wenn es sich bei der ursprünglichen URL um eine https-URL handelt. Andernfalls wird es auf \"ws\" festgelegt.",
			"browser.pathMapping.description": "Eine Zuordnung von URLs/Pfaden zu lokalen Ordnern, um Skripts im Browser in Skripts auf dem Datenträger aufzulösen",
			"browser.port.description": "Port, der für das Remotedebuggen des Browsers verwendet werden soll.",
			"browser.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Datei der Runtime übergeben werden.",
			"browser.runtimeExecutable.description": "Entweder \"canary\", \"stable\", \"custom\" oder der Pfad zur ausführbaren Browserdatei. \"custom\" steht für einen benutzerdefinierten Wrapper, einen benutzerdefinierten Build oder eine CHROME_PATH-Umgebungsvariable.",
			"browser.runtimeExecutable.edge.description": "Entweder \"canary\", \"stable\", \"dev\", \"custom\" oder der Pfad zur ausführbaren Browserdatei. Mit \"custom\" wird ein benutzerdefinierter Wrapper, ein benutzerdefinierter Build oder die EDGE_PATH-Umgebungsvariable angegeben.",
			"browser.server.description": "Konfiguriert einen Webserver für den Start. Nimmt dieselbe Konfiguration wie die Startaufgabe \"node\".",
			"browser.skipFiles.description": "Ein Array aus Datei- oder Ordnernamen oder Pfadglobs, die beim Debuggen übersprungen werden sollen.",
			"browser.smartStep.description": "Automatisch nicht zugeordnete Zeilen in Sourcemapdateien durchlaufen, z.B. von TypeScript automatisch generierter Code beim Herunterkompilieren von async/await oder anderen Features.",
			"browser.sourceMapPathOverrides.description": "Eine Reihe von Zuordnungen zum Umschreiben der Speicherorte von Quelldateien gemäß Sourcemap in die Speicherorte auf dem Datenträger. Ausführliche Informationen finden Sie in der README-Datei.",
			"browser.sourceMaps.description": "Hiermit werden JavaScript-Quellzuordnungsdateien verwendet (sofern vorhanden).",
			"browser.timeout.description": "Versuchen, erneut eine Verbindung zum Browser innerhalb der angegebenen Zeit in Millisekunden herzustellen. Der Standardwert ist 10.000 ms.",
			"browser.url.description": "Sucht nach einer Registerkarte mit genau dieser URL, und fügt sie an, falls gefunden",
			"browser.urlFilter.description": "Suchen Sie nach einer Seite mit dieser URL, und führen Sie eine Anfügung daran durch, wenn sie gefunden wird. Darf * als Platzhalter enthalten.",
			"browser.userDataDir.description": "Der Browser wird standardmäßig mit einem separaten Benutzerprofil in einem temporären Ordner gestartet. Verwenden Sie diese Option, um dieses Verhalten zu überschreiben. Legen Sie die Option dazu auf FALSE fest, damit der Browser mit Ihrem Standardbenutzerprofil gestartet wird.",
			"browser.webRoot.description": "Gibt den absoluten Arbeitsbereichspfad zum Webserverstamm an. Wird zur Auflösung von Pfaden wie \"/app.js\" zu Dateien auf dem Datenträger verwendet. Kurzschreibweise für ein pathMapping für \"/\".",
			"chrome.attach.description": "An eine Chrome-Instanz anfügen, die sich bereits im Debugmodus befindet",
			"chrome.attach.label": "Chrome: Anfügen",
			"chrome.label": "Chrome (Vorschau)",
			"chrome.launch.description": "Chrome starten, um eine URL zu debuggen",
			"chrome.launch.label": "Chrome: Start",
			"configuration.automaticallyTunnelRemoteServer": "Beim Debuggen einer Remote-Web-App wird konfiguriert, ob der Remoteserver automatisch auf den lokalen Computer getunnelt werden soll.",
			"configuration.debugByLinkOptions": "Optionen, die verwendet werden, wenn beim Debuggen innerhalb des Terminals auf geöffnete Links geklickt wird. Legen Sie diese Einstellung auf \"false\" fest, um dieses Verhalten zu deaktivieren.",
			"configuration.npmScriptLensLocation": "Wo in Ihren npm-Skripts \"Ausführen\" und \"Debuggen\" für CodeLens angezeigt werden soll. Mögliche Einstellungen sind \"Alle\" Skripts, \"Oben\" im Skriptabschnitt oder \"Keine\".",
			"configuration.pickAndAttachOptions": "Standardoptionen, die beim Debuggen eines Prozesses über den Befehl \"Debug: An Node-Prozess anfügen\" verwendet werden",
			"configuration.suggestPrettyPrinting": "Gibt an, ob JavaScript-Code, der bei Einzelschritten verkleinert aussieht, automatisch strukturiert und eingerückt werden soll.",
			"configuration.terminalOptions": "Standardstartoptionen für das JavaScript-Debug-Terminal und die npm-Skripts.",
			"configuration.usePreview": "Verwenden Sie den neuen JavaScript-Debugger für Node.js und Chrome, der sich in der Vorschau befindet.",
			"configuration.warnOnLongPrediction": "Gibt an, ob eine Ladeaufforderung angezeigt werden soll, wenn die Vorhersage eines Umbruchpunkts eine Weile dauert.",
			"debug.npm.edit": "Package.json bearbeiten",
			"debug.npm.noScripts": "In Ihrer package.json-Datei wurden keine npm-Skripts gefunden.",
			"debug.npm.noWorkspaceFolder": "Sie müssen einen Arbeitsbereichsordner öffnen, um npm-Skripts zu debuggen.",
			"debug.npm.parseError": "Fehler beim Lesen von {0}: {1}",
			"debug.npm.script": "npm-Skript debuggen",
			"debug.terminal.attach": "An Node.js-Terminalprozess anfügen",
			"debug.terminal.label": "JavaScript-Debugterminal erstellen",
			"debug.terminal.program.description": "Befehl zur Ausführung im gestarteten Terminal. Falls dieser nicht vorhanden ist, öffnet sich das Terminal, ohne ein Programm zu starten.",
			"debug.terminal.snippet.label": "\"npm start\" in einem Debug-Terminal ausführen",
			"debug.terminal.toggleAuto": "Automatisches Anfügen von Node.js für Terminal umschalten",
			"debug.terminal.welcome": "[Node.js-Debugterminal](command:extension.pwa-node-debug.createDebuggerTerminal)\n\nNutzen Sie das Node.js-Debugterminal, um über die Befehlszeile ausgeführten JavaScript-Code sofort zu debuggen.",
			"edge.attach.description": "An eine Microsoft Edge-Instanz anfügen, die sich bereits im Debugmodus befindet",
			"edge.attach.label": "Microsoft Edge: Anfügen",
			"edge.label": "Microsoft Edge (Vorschau)",
			"edge.launch.description": "Microsoft Edge zum Debuggen einer URL starten",
			"edge.launch.label": "Microsoft Edge: Starten",
			"edge.useWebView.description": "(nur Microsoft Edge [Chromium]) Falls TRUE, behandelt der Debugger die ausführbare Runtimedatei wie eine Hostanwendung, die eine WebView enthält, mit der Sie den WebView-Skriptinhalt debuggen können.",
			"errors.timeout": "{0}: Timeout nach {1} ms",
			"extension.description": "Erweiterung zum Debuggen von Node.js-Programmen und Chrome.",
			"extensionHost.label": "Entwicklung einer Visual Studio-Erweiterung (Vorschau)",
			"extensionHost.launch.config.name": "Extension starten",
			"extensionHost.launch.env.description": "Umgebungsvariablen, die an den Erweiterungshost übergeben werden.",
			"extensionHost.launch.runtimeExecutable.description": "Absoluter Pfad zu VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Hiermit wird der Erweiterungshost nach dem Start automatisch beendet.",
			"extensionHost.snippet.launch.description": "VS Code-Erweiterung im Debugmodus starten",
			"extensionHost.snippet.launch.label": "VS Code-Erweiterungsentwicklung",
			"longPredictionWarning.disable": "Nicht mehr anzeigen",
			"longPredictionWarning.message": "Es dauert einen Moment, Ihre Haltepunkte zu konfigurieren. Sie können den Vorgang beschleunigen, indem Sie die das outFiles-Attribut in der Datei \"launch.json\" aktualisieren.",
			"longPredictionWarning.noFolder": "Kein Ordner des Arbeitsbereichs geöffnet.",
			"longPredictionWarning.open": "launch.json öffnen",
			"node.address.description": "Die TCP/IP-Adresse des zu debuggenden Prozesses. Der Standardwert ist \"localhost\".",
			"node.attach.attachExistingChildren.description": "Gibt an, ob versucht werden soll, bereits erstellte untergeordnete Prozesse anzufügen.",
			"node.attach.attachSpawnedProcesses.description": "Ob Umgebungsvariablen im angefügten Prozess festgelegt werden sollen, um generierte untergeordnete Elemente nachzuverfolgen.",
			"node.attach.config.name": "Anfügen",
			"node.attach.continueOnAttach": "Falls TRUE, werden automatisch gestartete Programme fortgesetzt, und es wird auf --inspect-brk gewartet",
			"node.attach.processId.description": "Die ID des Prozesses für das Anfügen.",
			"node.attach.restart.description": "Versuchen Sie, die Verbindung zu dem Programm wiederherzustellen, wenn sie unterbrochen wird.",
			"node.console.title": "Node-Debugging-Konsole",
			"node.disableOptimisticBPs.description": "Hiermit werden Haltepunkte in einer beliebigen Datei erst festgelegt, wenn eine Sourcemap für diese Datei geladen wurde.",
			"node.label": "Node.js (Vorschau)",
			"node.launch.args.description": "Befehlszeilenargumente, die an das Programm übergeben werden.",
			"node.launch.autoAttachChildProcesses.description": "Debugger automatisch an neue Unterprozesse anfügen.",
			"node.launch.config.name": "Starten",
			"node.launch.console.description": "Startort des Debugziels",
			"node.launch.console.externalTerminal.description": "Ein externes Terminal, das über die Benutzereinstellungen konfiguriert werden kann",
			"node.launch.console.integratedTerminal.description": "Das integrierte Terminal von VS Code",
			"node.launch.console.internalConsole.description": "Die Debugging-Konsole von VS Code (die das Lesen von Eingaben von einem Programm nicht unterstützt)",
			"node.launch.cwd.description": "Absoluter Pfad zum Arbeitsverzeichnis des Programms, für das ein Debugging durchgeführt werden soll.",
			"node.launch.env.description": "Umgebungsvariablen, die an das Programm übergeben werden. Durch den Wert NULL wird die Variable aus der Umgebung entfernt.",
			"node.launch.envFile.description": "Absoluter Pfad zu einer Datei mit Umgebungsvariablendefinitionen.",
			"node.launch.logging": "Protokollierungskonfiguration",
			"node.launch.logging.cdp": "Pfad zur Protokolldatei für Chrome DevTools Protocol-Nachrichten",
			"node.launch.logging.dap": "Pfad zur Protokolldatei für Nachrichten des Debug Adapter Protocol",
			"node.launch.outputCapture.description": "Hiermit wird angegeben, wo Ausgabemeldungen erfasst werden: Debug-API oder stdout/stderr-Streams.",
			"node.launch.program.description": "Der absolute Pfad zum Programm. Der generierte Wert wird anhand von \"package.json\" und geöffneter Dateien geschätzt. Bearbeiten Sie dieses Attribut.",
			"node.launch.restart.description": "Wenn das Programm mit einem Exitcode ungleich Null beendet wird, versuchen Sie, es neu zu starten.",
			"node.launch.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Datei der Runtime übergeben werden.",
			"node.launch.runtimeExecutable.description": "Die Runtime, die verwendet werden soll: Geben Sie entweder einen absoluten Pfad oder den Namen einer im Pfad verfügbaren Runtime an. Wenn keine Angabe erfolgt, wird \"node\" angenommen.",
			"node.launch.runtimeVersion.description": "Die Version der node-Runtime, die verwendet werden soll. Benötigt \"nvm\".",
			"node.launch.useWSL.deprecation": "\"useWSL\" ist veraltet und wird demnächst nicht mehr unterstützt. Verwenden Sie stattdessen die Erweiterung \"Remote – WSL\".",
			"node.launch.useWSL.description": "Verwenden Sie das Windows-Subsystem für Linux.",
			"node.localRoot.description": "Pfad zum lokalen Verzeichnis mit dem Programm.",
			"node.pauseForSourceMap.description": "Gibt an, ob für jedes eingehende Skript gewartet werden soll, bis die Quellzuordnungsdateien geladen wurden. Dieser Vorgang führt zu einem Leistungsaufwand und ist möglicherweise sicher deaktiviert, wenn er auf einem Datenträger ausgeführt wird, solange \"rootPath\" nicht deaktiviert ist.",
			"node.port.description": "Der Debugport zum Anfügen. Der Standardwert ist 5858.",
			"node.processattach.config.name": "An den Prozess anhängen",
			"node.remoteRoot.description": "Absoluter Pfad zum Remoteverzeichnis mit dem Programm.",
			"node.resolveSourceMapLocations.description": "Eine Liste von Minimatchmustern für Speicherorte (Ordner und URLs), in denen Quellzuordnungsdateien zum Auflösen lokaler Dateien verwendet werden können. Damit lassen sich vermeiden, dass der Code aus externen Quellzuordnungsdateien falsch umgebrochen wird. Sie können Mustern ein \"!\" voranstellen, um sie auszuschließen. Die Einstellung kann auf ein leeres Array oder NULL gesetzt werden, um Einschränkungen zu vermeiden.",
			"node.showAsyncStacks.description": "Hiermit werden die asynchronen Aufrufe angezeigt, die zur aktuellen Aufrufliste geführt haben.",
			"node.snippet.attach.description": "An ein ausgeführtes Node-Programm anfügen",
			"node.snippet.attach.label": "Node.js: Anfügen",
			"node.snippet.attachProcess.description": "Prozessauswahl zum Auswählen des Node-Prozesses zum Anfügen öffnen",
			"node.snippet.attachProcess.label": "Node.js: An Prozess anfügen",
			"node.snippet.electron.description": "Electron-Hauptprozess debuggen",
			"node.snippet.electron.label": "Node.js: Electron-Hauptprozess",
			"node.snippet.gulp.description": "Gulp-Aufgabe debuggen (in Ihrem Projekt muss ein lokales Gulp installiert sein)",
			"node.snippet.gulp.label": "Node.js: Gulp-Aufgabe",
			"node.snippet.launch.description": "Node-Programm im Debugmodus starten",
			"node.snippet.launch.label": "Node.js: Programm starten",
			"node.snippet.mocha.description": "Mocha-Tests debuggen",
			"node.snippet.mocha.label": "Node.js: Mocha-Tests",
			"node.snippet.nodemon.description": "Verwenden Sie Nodemon zum erneuten Starten einer Debugsitzung bei Quellenänderungen.",
			"node.snippet.nodemon.label": "Node.js: Nodemon-Einrichtung",
			"node.snippet.npm.description": "Node-Programme über das npm-Skript \"debug\" starten",
			"node.snippet.npm.label": "Node.js: Über NPM starten",
			"node.snippet.remoteattach.description": "An den Debugport eines Remote-Node-Programms anfügen",
			"node.snippet.remoteattach.label": "Node.js: An Remote-Programm anfügen",
			"node.snippet.yo.description": "Yeoman-Generator debuggen (Installation erfolgt durch Ausführen von \"npm link\" im Projektordner)",
			"node.snippet.yo.label": "Node.js: Yeoman-Generator",
			"node.sourceMapPathOverrides.description": "Eine Gruppe von Mappings, mit denen die in der Sourcemap angegebenen Pfade der Quelldateien in ihre Pfade auf dem Datenträger umgeschrieben werden.",
			"node.sourceMaps.description": "Hiermit werden JavaScript-Quellzuordnungsdateien verwendet (sofern vorhanden).",
			"node.stopOnEntry.description": "Hiermit wird das Programm nach dem Start automatisch beendet.",
			"node.timeout.description": "Gibt den Zeitraum in Millisekunden an, nach dem erneut versucht wird, eine Verbindung mit Node.js herzustellen. Der Standardwert ist 10000 ms.",
			"outFiles.description": "Wenn Quellzuordnungsdateien aktiviert sind, geben diese Globmuster die generierten JavaScript-Dateien an. Wenn ein Muster mit \"!\" beginnt, werden die Dateien ausgeschlossen. Sofern nicht angegeben, wird der generierte Code im selben Verzeichnis wie die zugehörige Quelle erwartet.",
			"pretty.print.script": "Schöndruck zum Debuggen",
			"profile.start": "Leistungsprofil übernehmen",
			"profile.stop": "Leistungsprofil beenden",
			"remove.browser.breakpoint": "Browserhaltepunkt entfernen",
			"remove.browser.breakpoint.all": "Alle Browserhaltepunkte entfernen",
			"skipFiles.description": "Ein Array für Globmuster für Dateien, die beim Debuggen übersprungen werden. Das Muster \"<node_internals>/**\" stimmt mit allen internen Node.js-Modulen überein.",
			"smartStep.description": "Hiermit wird automatisch der generierte Code durchlaufen, der nicht der ursprünglichen Quelle zugeordnet werden kann.",
			"start.with.stop.on.entry": "Debuggen starten und beim Eintrag beenden",
			"toggle.skipping.this.file": "Überspringen dieser Datei aktivieren/deaktivieren",
			"trace.boolean.description": "Die Überwachung kann auf TRUE gesetzt werden, um Diagnoseprotokolle auf den Datenträger zu schreiben.",
			"trace.console.description": "Konfiguriert, ob Protokolle auch an die Debugging-Konsole zurückgegeben werden.",
			"trace.description": "Konfiguriert, welche Diagnoseausgabe erzeugt wird.",
			"trace.level.description": "Konfiguriert die Ebene der aufgezeichneten Protokolle.",
			"trace.logFile.description": "Konfiguriert, wo auf dem Datenträger Protokolle geschrieben werden.",
			"trace.stdio.description": "Gibt an, ob Ablaufverfolgungsdaten aus der gestarteten Anwendung oder dem gestarteten Browser zurückgegeben werden sollen.",
			"trace.tags.description": "Konfiguriert, welche Arten von Protokollen aufgezeichnet werden."
		}
	}
}