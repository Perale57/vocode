{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Browserhaltepunkt hinzufügen",
			"attach.node.process": "An Node.js-Prozess anhängen (Vorschau)",
			"chrome.address.description": "TCP/IP Adresse des Debugports",
			"chrome.attach.description": "An eine Chrome-Instanz anfügen, die sich bereits im Debugmodus befindet",
			"chrome.attach.label": "Chrome: Anfügen",
			"chrome.baseUrl.description": "Die Basis-URL zum Auflösen von Pfaden (baseUrl). baseURL wird beim Zuordnen von URLs zu den Dateien auf dem Datenträger gekürzt. Der Standardwert ist die Start-URL-Domäne.",
			"chrome.cwd.description": "Optionales Arbeitsverzeichnis für die ausführbare Laufzeitdatei.",
			"chrome.disableNetworkCache.description": "Steuert, ob der Netzwerkcache für jede Anforderung übersprungen werden soll",
			"chrome.env.description": "Optionales Wörterbuch der Umgebungs-Schlüssel-/Wert-Paare für den Browser.",
			"chrome.file.description": "Eine lokale html-Datei im Browser zu öffnen",
			"chrome.label": "Chrome (Vorschau)",
			"chrome.launch.description": "Chrome starten, um eine URL zu debuggen",
			"chrome.launch.label": "Chrome: Start",
			"chrome.pathMapping.description": "Eine Zuordnung an URLs/Pfaden auf lokale Ordner, um Skripte in Chrome aufzulösen für Skripte auf lokalem Speicher",
			"chrome.port.description": "Zu verwendender Port für Chrome Remote-Debugging.",
			"chrome.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Laufzeitdatei übergeben werden.",
			"chrome.runtimeExecutable.description": "Entweder \"canary\", \"stable\", \"custom\" oder der Pfad zur ausführbaren Browserdatei. \"custom\" steht für einen benutzerdefinierten Wrapper, einen benutzerdefinierten Build oder eine CHROME_PATH-Umgebungsvariable.",
			"chrome.server.description": "Konfiguriert einen Webserver für den Start. Nimmt dieselbe Konfiguration wie die Startaufgabe \"node\".",
			"chrome.showAsyncStacks.description": "Zeigt die asynchronen Aufrufe an, die zur aktuellen Aufrufliste geführt haben",
			"chrome.skipFiles.description": "Ein Feld von Datei- oder Ordnernamen oder glob Mustern , die beim Debuggen übersprungen werden sollen.",
			"chrome.smartStep.description": "Nicht zugeordnete Zeilen in Sourcemap-Dateien automatisch durchlaufen, z.B. Code, den TypeScript beim Kompilieren von aysnc/await oder anderen Features automatisch erstellt.",
			"chrome.sourceMapPathOverrides.description": "Eine Gruppe von Mappings, mit denen die in der Sourcemap angegebenen Pfade der Quelldateien in ihre Pfade auf dem Datenträger umgeschrieben werden. Ausführliche Informationen finden Sie in der Infodatei.",
			"chrome.sourceMaps.description": "Verwendet JavaScript-Quellzuordnungen (wenn vorhanden).",
			"chrome.timeout.description": "Führt für diese Anzahl von Millisekunden Wiederholungsversuche aus, um eine Verbindung mit Chrome herzustellen. Der Standardwert sind 10.000 Millisekunden.",
			"chrome.url.description": "Sucht nach einer Registerkarte mit genau dieser URL, und fügt sie an, falls gefunden",
			"chrome.urlFilter.description": "Eine Seite mit dieser URL wird gesucht und daran angefügt, falls gefunden. Kann den Platzhalter * enthalten.",
			"chrome.userDataDir.description": "Chrome wird standardmäßig mit einem separaten Benutzerprofil in einem temporären Ordner gestartet. Verwende diese Option, um dies zu überschreiben. Auf \"false\" setzen, um mit deinem Standard-Benutzerprofil zu starten.",
			"chrome.webRoot.description": "Dies gibt den absoluten Arbeitsbereichspfad zum Webserverstamm an. Wird zum Auflösen von Pfaden wie \"/apps.js\" für Dateien auf einem Datenträger verwendet. Kurz für ein pathMapping für \"/\".",
			"configuration.npmScriptLensLocation": "Wo in Ihren npm-Skripts \"Ausführen\" und \"Debuggen\" für CodeLens angezeigt werden soll. Mögliche Einstellungen sind \"Alle\" Skripts, \"Oben\" im Skriptabschnitt oder \"Keine\".",
			"configuration.terminalOptions": "Standardstartoptionen für das JavaScript-Debug-Terminal und die npm-Skripts.",
			"configuration.usePreview": "Verwenden Sie den neuen JavaScript-Debugger für Node.js und Chrome, der sich in der Vorschau befindet.",
			"configuration.warnOnLongPrediction": "Gibt an, ob eine Ladeaufforderung angezeigt werden soll, wenn die Vorhersage eines Umbruchpunkts eine Weile dauert.",
			"debug.npm.edit": "Package.json bearbeiten",
			"debug.npm.noScripts": "In Ihrer package.json-Datei wurden keine npm-Skripts gefunden.",
			"debug.npm.noWorkspaceFolder": "Sie müssen einen Arbeitsbereichsordner öffnen, um npm-Skripts zu debuggen.",
			"debug.npm.parseError": "Fehler beim Lesen von {0}: {1}",
			"debug.npm.script": "npm-Skript debuggen",
			"debug.terminal.label": "JavaScript-Debugterminal erstellen",
			"debug.terminal.program.description": "Befehl zur Ausführung im gestarteten Terminal. Falls dieser nicht vorhanden ist, öffnet sich das Terminal, ohne ein Programm zu starten.",
			"debug.terminal.snippet.label": "\"npm start\" in einem Debug-Terminal ausführen",
			"edge.useWebView.description": "(nur Edge [Chromium]) Falls TRUE, behandelt der Debugger die ausführbare Datei der Runtime als Hostanwendung, die eine WebView enthält, mit der Sie den WebView-Skriptinhalt debuggen können. Wenn der Debugger auf \"Erweitert\" festgelegt ist, wartet er, bis eine Verbindung zu einer WebView hergestellt werden kann, die urlFilter entspricht.",
			"errors.timeout": "{0}: Timeout nach {1} ms",
			"extension.description": "Erweiterung zum Debuggen von Node.js-Programmen und Chrome.",
			"extensionHost.label": "Entwicklung einer Visual Studio-Erweiterung (Vorschau)",
			"extensionHost.launch.config.name": "Extension starten",
			"extensionHost.launch.env.description": "Umgebungsvariablen wurden an den Erweiterungshost weitergegeben.",
			"extensionHost.launch.runtimeExecutable.description": "Der absolute Pfad zu VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Beendet den Erweiterungshost nach dem Start automatisch.",
			"extensionHost.snippet.launch.description": "VS Code-Erweiterung im Debugmodus starten",
			"extensionHost.snippet.launch.label": "VSCode-Erweiterungsentwicklung",
			"longPredictionWarning.disable": "Nicht mehr anzeigen",
			"longPredictionWarning.message": "Es dauert einen Moment, Ihre Haltepunkte zu konfigurieren. Sie können den Vorgang beschleunigen, indem Sie die das outFiles-Attribut in der Datei \"launch.json\" aktualisieren.",
			"longPredictionWarning.noFolder": "Kein Ordner des Arbeitsbereichs geöffnet.",
			"longPredictionWarning.open": "launch.json öffnen",
			"node.address.description": "Die TCP/IP-Adresse des zu debuggenden Prozesses. Der Standardwert ist \"localhost\".",
			"node.attach.attachExistingChildren.description": "Gibt an, ob versucht werden soll, bereits erstellte untergeordnete Prozesse anzufügen.",
			"node.attach.attachSpawnedProcesses.description": "Ob Umgebungsvariablen im angefügten Prozess festgelegt werden sollen, um generierte untergeordnete Elemente nachzuverfolgen.",
			"node.attach.config.name": "Anfügen",
			"node.attach.processId.description": "Die ID des Prozesses, an den die Anfügung erfolgen soll.",
			"node.attach.restart.description": "Versuchen Sie, die Verbindung zu dem Programm wiederherzustellen, wenn sie unterbrochen wird.",
			"node.console.title": "Node-Debugging-Konsole",
			"node.disableOptimisticBPs.description": "Legen Sie nur dann Haltepunkte in einer Datei fest, wenn für die betreffende Datei eine Sourcemap geladen wurde.",
			"node.label": "Node.js (Vorschau)",
			"node.launch.args.description": "Befehlszeilenargumente, die an das Programm übergeben werden.",
			"node.launch.autoAttachChildProcesses.description": "Debugger automatisch an neue Unterprozesse anfügen.",
			"node.launch.config.name": "Starten",
			"node.launch.console.description": "Startort des Debugziels",
			"node.launch.console.externalTerminal.description": "Ein externes Terminal, das über die Benutzereinstellungen konfiguriert werden kann",
			"node.launch.console.integratedTerminal.description": "Das integrierte Terminal von VS Code",
			"node.launch.console.internalConsole.description": "Die Debugging-Konsole von VS Code (die das Lesen von Eingaben von einem Programm nicht unterstützt)",
			"node.launch.cwd.description": "Der absolute Pfad zum Arbeitsverzeichnis des Programms, das debuggt wird.",
			"node.launch.env.description": "An das Programm übergebene Umgebungsvariablen. Der Wert \"null\" entfernt die Variable aus der Umgebung.",
			"node.launch.envFile.description": "Absoluter Pfad zu einer Datei mit Definitionen für Umgebungsvariablen.",
			"node.launch.logging": "Protokollierungskonfiguration",
			"node.launch.logging.cdp": "Pfad zur Protokolldatei für Chrome DevTools Protocol-Nachrichten",
			"node.launch.logging.dap": "Pfad zur Protokolldatei für Nachrichten des Debug Adapter Protocol",
			"node.launch.outputCapture.description": "Ort der Erfassung von Ausgabemeldungen: die Debug-API oder stdout/stderr-Streams. ",
			"node.launch.program.description": "Der absolute Pfad zum Programm. Der generierte Wert wird anhand von \"package.json\" und geöffneter Dateien geschätzt. Bearbeiten Sie dieses Attribut.",
			"node.launch.restart.description": "Wenn das Programm mit einem Exitcode ungleich Null beendet wird, versuchen Sie, es neu zu starten.",
			"node.launch.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Laufzeitdatei übergeben werden.",
			"node.launch.runtimeExecutable.description": "Die Runtime, die verwendet werden soll: Geben Sie entweder einen absoluten Pfad oder den Namen einer im Pfad verfügbaren Runtime an. Wenn keine Angabe erfolgt, wird \"node\" angenommen.",
			"node.launch.runtimeVersion.description": "Die Version der node-Runtime, die verwendet werden soll. Benötigt \"nvm\".",
			"node.launch.useWSL.deprecation": "\"useWSL\" ist veraltet und wird demnächst nicht mehr unterstützt. Verwenden Sie stattdessen die Erweiterung \"Remote – WSL\".",
			"node.launch.useWSL.description": "Verwenden Sie das Windows-Subsystem für Linux.",
			"node.localRoot.description": "Pfad zum lokalen Verzeichnis mit dem Programm.",
			"node.pauseForSourceMap.description": "Gibt an, ob für jedes eingehende Skript gewartet werden soll, bis die Quellzuordnungsdateien geladen wurden. Dieser Vorgang führt zu einem Leistungsaufwand und ist möglicherweise sicher deaktiviert, wenn er auf einem Datenträger ausgeführt wird, solange \"rootPath\" nicht deaktiviert ist.",
			"node.port.description": "Der Debugport zum Anfügen. Der Standardwert ist 5858.",
			"node.processattach.config.name": "An den Prozess anhängen",
			"node.remoteRoot.description": "Absoluter Pfad zum Remoteverzeichnis mit dem Programm.",
			"node.resolveSourceMapLocations.description": "Eine Liste von Minimatchmustern für Speicherorte (Ordner und URLs), in denen Quellzuordnungsdateien zum Auflösen lokaler Dateien verwendet werden können. Damit lassen sich vermeiden, dass der Code aus externen Quellzuordnungsdateien falsch umgebrochen wird. Sie können Mustern ein \"!\" voranstellen, um sie auszuschließen. Die Einstellung kann auf ein leeres Array oder NULL gesetzt werden, um Einschränkungen zu vermeiden.",
			"node.showAsyncStacks.description": "Zeigt die asynchronen Aufrufe an, die zur aktuellen Aufrufliste geführt haben.",
			"node.snippet.attach.description": "An ein ausgeführtes Node-Programm anfügen",
			"node.snippet.attach.label": "Node.js: Anfügen",
			"node.snippet.attachProcess.description": "Prozessauswahl zum Auswählen des Node-Prozesses zum Anfügen öffnen",
			"node.snippet.attachProcess.label": "Node.js: An Prozess anfügen",
			"node.snippet.electron.description": "Electron-Hauptprozess debuggen",
			"node.snippet.electron.label": "Node.js: Electron-Hauptprozess",
			"node.snippet.gulp.description": "Gulp-Aufgabe debuggen (in Ihrem Projekt muss ein lokales Gulp installiert sein)",
			"node.snippet.gulp.label": "Node.js: Gulp-Aufgabe",
			"node.snippet.launch.description": "Node-Programm im Debugmodus starten",
			"node.snippet.launch.label": "Node.js: Programm starten",
			"node.snippet.mocha.description": "Mocha-Tests debuggen",
			"node.snippet.mocha.label": "Node.js: Mocha-Tests",
			"node.snippet.nodemon.description": "Verwenden Sie Nodemon zum erneuten Starten einer Debugsitzung bei Quellenänderungen.",
			"node.snippet.nodemon.label": "Node.js: Nodemon-Einrichtung",
			"node.snippet.npm.description": "Node-Programme über das npm-Skript \"debug\" starten",
			"node.snippet.npm.label": "Node.js: Über NPM starten",
			"node.snippet.remoteattach.description": "An den Debugport eines Remote-Node-Programms anfügen",
			"node.snippet.remoteattach.label": "Node.js: An Remote-Programm anfügen",
			"node.snippet.yo.description": "Yeoman-Generator debuggen (Installation erfolgt durch Ausführen von \"npm link\" im Projektordner)",
			"node.snippet.yo.label": "Node.js: Yeoman-Generator",
			"node.sourceMapPathOverrides.description": "Eine Gruppe von Mappings, mit denen die in der Sourcemap angegebenen Pfade der Quelldateien in ihre Pfade auf dem Datenträger umgeschrieben werden.",
			"node.sourceMaps.description": "Verwendet JavaScript-Quellzuordnungen (wenn vorhanden).",
			"node.stopOnEntry.description": "Beendet das Programm nach dem Start automatisch.",
			"node.timeout.description": "Führt für diese Anzahl von Millisekunden Wiederholungsversuche aus, um eine Verbindung mit Node.js herzustellen. Der Standardwert sind 10.000 Millisekunden.",
			"open.loaded.script": "Geladenes Skript öffnen",
			"outFiles.description": "Wenn Quellzuordnungen aktiviert sind, geben diese Globmuster die generierten JavaScript-Dateien an. Wenn ein Muster mit \"!\" beginnt, werden die Dateien ausgeschlossen. Wenn keine Angabe erfolgt, wird der generierte Code im gleichen Verzeichnis wie seine Quelle erwartet.",
			"pretty.print.script": "Schöndruck zum Debuggen",
			"remove.browser.breakpoint": "Browserhaltepunkt entfernen",
			"remove.browser.breakpoint.all": "Alle Browserhaltepunkte entfernen",
			"skipFiles.description": "Ein Array für Globmuster für Dateien, die beim Debuggen übersprungen werden. Das Muster \"<node_internals>/**\" stimmt mit allen internen Node.js-Modulen überein.",
			"smartStep.description": "Durchläuft automatisch den generierten Code, der nicht der ursprünglichen Quelle erneut zugeordnet werden kann.",
			"start.with.stop.on.entry": "Debuggen starten und beim Eintrag beenden",
			"toggle.skipping.this.file": "Überspringen dieser Datei umschalten",
			"trace.boolean.description": "Die Überwachung kann auf TRUE gesetzt werden, um Diagnoseprotokolle auf den Datenträger zu schreiben.",
			"trace.console.description": "Konfiguriert, ob Protokolle auch an die Debugging-Konsole zurückgegeben werden.",
			"trace.description": "Konfiguriert, welche Diagnoseausgabe erzeugt wird.",
			"trace.level.description": "Konfiguriert die Ebene der aufgezeichneten Protokolle.",
			"trace.logFile.description": "Konfiguriert, wo auf dem Datenträger Protokolle geschrieben werden.",
			"trace.tags.description": "Konfiguriert, welche Arten von Protokollen aufgezeichnet werden."
		}
	}
}