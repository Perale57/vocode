{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "TypeScript ve JavaScript Dili Özellikleri",
			"description": "JavaScript ve TypeScript için zengin dil desteği sağlar.",
			"reloadProjects.title": "Projeyi Yeniden Yükle",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "İşlevleri parametre imzalarıyla tamamlayın.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.",
			"typescript.tsdk.desc": "Specifies the folder path to the tsserver and lib*.d.ts files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
			"typescript.disableAutomaticTypeAcquisition": "Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
			"typescript.tsserver.log": "TS sunucusunun bir dosyaya günlük yazmasını etkinleştirir. Bu günlük, TS Sunucu sorunlarını teşhis etmek için kullanılabilir. Günlük dosya yollarını, kaynak kodunu ve projenizdeki diğer muhtemel hassas bilgileri içerebilir.",
			"typescript.tsserver.pluginPaths": "Additional paths to discover TypeScript Language Service plugins. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"typescript.tsserver.pluginPaths.item": "Mutlak veya göreli bir yol. Göreli yol, çalışma alanı klasörü veya klasörlerine göre çözümlenecektir.",
			"typescript.tsserver.trace": "TS sunucusuna gönderilen mesajları izlemeyi etkinleştirir. Bu izleme, TS Sunucu sorunlarını teşhis etmek için kullanılabilir. İzleme; dosya yollarını, kaynak kodunu ve projenizdeki diğer muhtemel hassas bilgileri içerebilir.",
			"typescript.validate.enable": "TypeScript doğrulamasını etkinleştir veya devre dışı bırak.",
			"typescript.format.enable": "Varsayılan TypeScript biçimlendiricisini etkinleştirin/devre dışı bırakın.",
			"javascript.format.enable": "Varsayılan JavaScript biçimlendiricisini etkinleştir veya devre dışı bırak.",
			"format.insertSpaceAfterCommaDelimiter": "Virgül sınırlayıcısından sonra boşluk eklenmesini tanımlar.",
			"format.insertSpaceAfterConstructor": "Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"format.insertSpaceAfterSemicolonInForStatements": "Defines space handling after a semicolon in a for statement.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Bir ikili operatöründen sonra boşluk eklenmesini tanımlar.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Bir kontrol akışı ifadesi için anahtar kelimelerden sonra boşluk eklenmesini tanımlar.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Anonim fonksiyonlar için \"function\" anahtar kelimesinden sonra boşluk eklenmesini tanımlar.",
			"format.insertSpaceBeforeFunctionParenthesis": "Defines space handling before function argument parentheses.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Boş olmayan parantezler açıldıktan sonra ve kapatılmadan önce boşluk eklenmesini tanımlar.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Boş olmayan köşeli parantezler açıldıktan sonra ve kapatılmadan önce boşluk eklenmesini tanımlar.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Defines space handling after opening and before closing template string braces.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Defines space handling after opening and before closing JSX expression braces.",
			"format.insertSpaceAfterTypeAssertion": "Defines space handling after type assertions in TypeScript. Requires using TypeScript 2.4 or newer in the workspace.",
			"format.placeOpenBraceOnNewLineForFunctions": "Fonksiyonlarda bir açılış ayracının yeni satıra koyulup koyulmayacağını tanımlar.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Kontrol bloklarında bir açılış ayracının yeni satıra koyulup koyulmayacağını tanımlar.",
			"format.semicolons": "Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.",
			"format.semicolons.ignore": "Don't insert or remove any semicolons.",
			"format.semicolons.insert": "Insert semicolons at statement ends.",
			"format.semicolons.remove": "Remove unnecessary semicolons.",
			"javascript.validate.enable": "JavaScript doğrulamasını etkinleştir veya devre dışı bırak.",
			"goToProjectConfig.title": "Proje Yapılandırmasına Git",
			"javascript.referencesCodeLens.enabled": "JavaScript dosyalarında başvuru kod objektifini etkinleştir veya devre dışı bırak.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Enable/disable references CodeLens on all functions in JavaScript files.",
			"typescript.referencesCodeLens.enabled": "Enable/disable references CodeLens in TypeScript files.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Enable/disable references CodeLens on all functions in TypeScript files.",
			"typescript.implementationsCodeLens.enabled": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
			"typescript.openTsServerLog.title": "TS Sunucu günlüğünü aç",
			"typescript.restartTsServer": "TS sunucusunu yeniden başlat",
			"typescript.selectTypeScriptVersion.title": "Select TypeScript Version...",
			"typescript.reportStyleChecksAsWarnings": "Report style checks as warnings.",
			"javascript.implicitProjectConfig.checkJs": "JavaScript dosyalarının anlamsal kontrolünü etkinleştirin / devre dışı bırakın. Mevcut jsconfig.json veya tsconfig.json dosyaları bu ayarı geçersiz kılar. Çalışma alanında TypeScript 2.3.1 veya daha yeni bir sürüm kullanılmasını gerektirir.",
			"typescript.npm": "Specifies the path to the npm executable used for Automatic Type Acquisition. Requires using TypeScript 2.3.4 or newer in the workspace.",
			"typescript.check.npmIsInstalled": "Otomatik Tür Kazanımı için NPM'in yüklü olup olmadığını kontrol et.",
			"configuration.suggest.names": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
			"typescript.tsc.autoDetect": "Controls auto detection of tsc tasks.",
			"typescript.tsc.autoDetect.off": "Disable this feature.",
			"typescript.tsc.autoDetect.on": "Create both build and watch tasks.",
			"typescript.tsc.autoDetect.build": "Sadece tek çalışma derleme görevleri oluşturun.",
			"typescript.tsc.autoDetect.watch": "Only create compile and watch tasks.",
			"typescript.problemMatchers.tsc.label": "TypeScript sorunları",
			"typescript.problemMatchers.tscWatch.label": "TypeScript sorunları (izleme modu)",
			"configuration.suggest.paths": "Enable/disable suggestions for paths in import statements and require calls.",
			"configuration.tsserver.useSeparateSyntaxServer": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols. Requires using TypeScript 3.4.0 or newer in the workspace.",
			"configuration.tsserver.maxTsServerMemory": "Set the maximum amount of memory (in MB) to allocate to the TypeScript server process",
			"typescript.locale": "Sets the locale used to report JavaScript and TypeScript errors. Requires using TypeScript 2.6.0 or newer in the workspace. Default of `null` uses VS Code's locale.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
			"configuration.suggest.autoImports": "Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.",
			"taskDefinition.tsconfig.description": "TS derlemesini tanımlayan tsconfig dosyası.",
			"javascript.suggestionActions.enabled": "Editördeki JavaScript dosyaları için öneri metini etkinleştirin / devre dışı bırakın. Çalışma alanında TypeScript 2.8 veya daha yenisini kullanmayı gerektirir.",
			"typescript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for TypeScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
			"typescript.preferences.quoteStyle": "Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.",
			"typescript.preferences.importModuleSpecifier": "Preferred path style for auto imports.",
			"typescript.preferences.importModuleSpecifier.auto": "Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.",
			"typescript.preferences.importModuleSpecifier.relative": "Relative to the file location.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`.",
			"typescript.updateImportsOnFileMove.enabled": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Prompt on each rename.",
			"typescript.updateImportsOnFileMove.enabled.always": "Always update paths automatically.",
			"typescript.updateImportsOnFileMove.enabled.never": "Never rename paths and don't prompt.",
			"typescript.autoClosingTags": "Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace.",
			"typescript.suggest.enabled": "Enabled/disable autocomplete suggestions.",
			"configuration.surveys.enabled": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
			"configuration.suggest.completeJSDocs": "Enable/disable suggestion to complete JSDoc comments.",
			"typescript.preferences.renameShorthandProperties": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
			"codeActions.refactor.extract.constant.title": "Extract constant",
			"codeActions.refactor.extract.constant.description": "Extract expression to constant.",
			"codeActions.refactor.extract.function.title": "Extract function",
			"codeActions.refactor.extract.function.description": "Extract expression to method or function.",
			"codeActions.refactor.extract.type.title": "Extract type",
			"codeActions.refactor.extract.type.description": "Extract type to a type alias.",
			"codeActions.refactor.extract.interface.title": "Arabirimi Ayıkla",
			"codeActions.refactor.extract.interface.description": "Extract type to an interface.",
			"codeActions.refactor.rewrite.import.title": "Convert import",
			"codeActions.refactor.rewrite.import.description": "Convert between named imports and namespace imports.",
			"codeActions.refactor.rewrite.export.title": "Convert export",
			"codeActions.refactor.rewrite.export.description": "Convert between default export and named export.",
			"codeActions.refactor.move.newFile.title": "Move to a new file",
			"codeActions.refactor.move.newFile.description": "Move the expression to a new file.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Rewrite arrow braces",
			"codeActions.refactor.rewrite.arrow.braces.description": "Add or remove braces in an arrow function.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Convert parameters to destructured object",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generate accessors",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generate 'get' and 'set' accessors",
			"codeActions.source.organizeImports.title": "İçe Aktarımları Düzenle",
			"documentation.refactoring.title": "Learn more about JS/TS refactorings"
		},
		"dist/utils/api": {
			"invalidVersion": "geçersiz sürüm"
		},
		"dist/features/baseCodeLensProvider": {
			"referenceErrorLabel": "Başvurular belirlenemedi"
		},
		"dist/commands/goToProjectConfiguration": {
			"typescript.projectConfigNoWorkspace": "Bir TypeScript veya JavaScript projesini kullanmak için lütfen bir klasör açın",
			"typescript.projectConfigUnsupportedFile": "TypeScript mi yoksa JavaScript mi projesi olduğu tespit edilemedi. Desteklenmeyen dosya türü",
			"typescript.projectConfigCouldNotGetInfo": "TypeScript mi yoksa JavaScript mi projesi olduğu tespit edilemedi",
			"typescript.noTypeScriptProjectConfig": "Dosya bir TypeScript projesinin parçası değil. Daha fazla bilgi almak için [buraya]({0}) tıklayın.",
			"typescript.noJavaScriptProjectConfig": "Dosya bir JavaScript projesinin parçası değil. Daha fazla bilgi almak için [buraya]({0}) tıklayın.",
			"typescript.configureTsconfigQuickPick": "tsconfig.json'u yapılandır",
			"typescript.configureJsconfigQuickPick": "jsconfig.json'u yapılandır"
		},
		"dist/features/completions": {
			"selectCodeAction": "Uygulanacak kod eylemini seçin",
			"acquiringTypingsLabel": "Tuşlamalar alınıyor...",
			"acquiringTypingsDetail": "IntelliSense için tuşlama tanımları alınıyor...",
			"autoImportLabel": "{0} kaynağından otomatik içe aktar"
		},
		"dist/features/directiveCommentCompletions": {
			"ts-check": "Bir JavaScript dosyasının anlamsal kontrolünü etkinleştirir. Bir dosyanın en üstünde olmalıdır.",
			"ts-nocheck": "Bir JavaScript dosyasının anlamsal kontrolünü devre dışı bırakır. Bir dosyanın en üstünde olmalıdır.",
			"ts-ignore": "Bir dosyanın sonraki satırında @ts-check hatalarını bastırır."
		},
		"dist/features/implementationsCodeLens": {
			"oneImplementationLabel": "1 uygulama",
			"manyImplementationLabel": "{0} uygulama"
		},
		"dist/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "JSDoc yorumu"
		},
		"dist/features/organizeImports": {
			"organizeImportsAction.title": "İçe Aktarımları Düzenle"
		},
		"dist/features/quickFix": {
			"fixAllInFileLabel": "{0} (Dosyadaki tümünü düzelt)"
		},
		"dist/features/fixAll": {
			"autoFix.label": "Auto fix"
		},
		"dist/features/refactor": {
			"refactoringFailed": "Could not apply refactoring",
			"extractConstant.disabled.title": "Extract to constant",
			"extractConstant.disabled.reason": "The current selection cannot be extracted",
			"extractFunction.disabled.title": "Extract to function",
			"extractFunction.disabled.reason": "The current selection cannot be extracted"
		},
		"dist/features/referencesCodeLens": {
			"oneReferenceLabel": "1 başvuru",
			"manyReferenceLabel": "{0} başvuru"
		},
		"dist/features/rename": {
			"fileRenameFail": "An error occurred while renaming file"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "{0} yolu geçerli bir tsserver kurulumuna işaret etmiyor. Paketlenmiş TypeScript sürümüne geri dönülüyor.",
			"serverExitedWithError": "TypeScript dil sunucusu hata verdi. Hata mesajı: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "TS Sunucu günlüğü kapalı. Lütfen `typescript.tsserver.log` ögesini ayarlayın ve günlüğe yazmayı etkinleştirmek için TS sunucusunu yeniden başlatın",
			"typescript.openTsServerLog.enableAndReloadOption": "Günlüğe yazmayı etkinleştir ve TS sunucusunu yeniden başlat",
			"typescript.openTsServerLog.noLogFile": "TS sunucu günlüğe yazmaya başlamadı.",
			"openTsServerLog.openFileFailedFailed": "TS Sunucu günlük dosyası açılamadı",
			"serverDiedAfterStart": "TypeScript dil hizmeti, başladıktan hemen sonra 5 kez kapandı. Hizmet yeniden başlatılmayacaktır.",
			"serverDiedReportIssue": "Sorun Bildir",
			"serverDied": "TypeScript dil hizmeti, son 5 dakikada 5 kez beklenmedik şekilde kapandı.",
			"serverLoading.progress": "Initializing JS/TS language features"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/versionPicker": {
			"useVSCodeVersionOption": "VS Code'un Sürümünü Kullan",
			"useWorkspaceVersionOption": "Çalışma Alanı Sürümünü Kullan",
			"learnMore": "Daha fazla bilgi",
			"selectTsVersion": "JavaScript ve TypeScript dil özellikleri için kullanılacak TypeScript sürümünü seçin"
		},
		"dist/utils/versionProvider": {
			"couldNotLoadTsVersion": "Bu yolda TypeScript sürümü yüklenemedi",
			"noBundledServerFound": "VS Code'un tsserver'ı hatalı bir virüs tespit aracı gibi bir uygulama tarafından silindi. Lütfen VS Code'u yeniden yükleyin."
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Daha iyi TypeScript IntelliSense için veri alınıyor",
			"typesInstallerInitializationFailed.title": "JavaScript dil özellikleri için tuşlama dosyaları yüklenemedi. Lütfen NPM'in yüklenmiş olduğundan emin olun veya kullanıcı ayarlarınızdaki 'typescript.npm' ögesini yapılandırın. Daha fazla bilgi almak için [buraya]({0}) tıklayın.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Bir daha gösterme"
		},
		"dist/utils/versionStatus": {
			"typescriptVersion": "TypeScript: Sürüm"
		},
		"dist/features/updatePathsOnRename": {
			"renameProgress.title": "Checking for update of JS/TS imports",
			"prompt": "Update imports for '{0}'?",
			"promptMoreThanOne": "Update imports for the following {0} files?",
			"reject.title": "Hayır",
			"accept.title": "Evet",
			"always.title": "Always automatically update imports",
			"never.title": "Never automatically update imports",
			"moreFile": "...1 ek dosya gösterilmiyor",
			"moreFiles": "...{0} ek dosya gösterilmiyor"
		},
		"dist/utils/projectStatus": {
			"statusExclude": "TypeScript: Configure Excludes",
			"hintExclude": "Proje çapında JavaScript/TypeScript dil özelliklerini etkinleştirmek için, şunlar gibi birçok dosyaya sahip klasörleri hariç tutun: {0}",
			"hintExclude.generic": "Proje çapında JavaScript/TypeScript dil özelliklerini etkinleştirmek için, üzerinde çalışmadığınız kaynak dosyalar içeren büyük klasörleri hariç tutun.",
			"large.label": "Hariç Tutmaları Yapılandır",
			"hintExclude.tooltip": "Proje çapında JavaScript/TypeScript dil özelliklerini etkinleştirmek için, üzerinde çalışmadığınız kaynak dosyalar içeren büyük klasörleri hariç tutun."
		},
		"dist/utils/surveyor": {
			"survey.checkJs.prompt": "Help improve VS Code's support for [checkJs](https://code.visualstudio.com/Docs/languages/javascript#_type-checking) in JavaScript! Since you have been using this feature, would you consider taking a short survey about your experience?",
			"takeShortSurvey": "Kısa Ankete Katıl",
			"remindLater": "Daha Sonra Hatırlat",
			"neverAgain": "Disable JS/TS Surveys"
		},
		"dist/features/task": {
			"badTsConfig": "TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"",
			"buildTscLabel": "derleme - {0}",
			"buildAndWatchTscLabel": "izleme - {0}"
		}
	}
}