{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Add Browser Breakpoint",
			"attach.node.process": "Attach to Node Process (preview)",
			"browser.address.description": "Hata ayıklama portunun TCP/IP adresi",
			"browser.baseUrl.description": "Base URL to resolve paths baseUrl. baseURL is trimmed when mapping URLs to the files on disk. Defaults to the launch URL domain.",
			"browser.cwd.description": "Çalışma zamanı yürütülebilir dosyası için isteğe bağlı çalışma dizini.",
			"browser.disableNetworkCache.description": "Her istek için ağ önbelleğinin atlanıp atlanmayacağını denetler",
			"browser.env.description": "Optional dictionary of environment key/value pairs for the browser.",
			"browser.file.description": "Tarayıcıda açılacak yerel bir html dosyası",
			"browser.includeDefaultArgs.description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
			"browser.inspectUri.description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n",
			"browser.pathMapping.description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk",
			"browser.port.description": "Port to use for remote debugging the browser.",
			"browser.runtimeArgs.description": "Çalışma zamanı yürütülebilir dosyasına iletilecek isteğe bağlı argümanlar.",
			"browser.runtimeExecutable.description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
			"browser.server.description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
			"browser.skipFiles.description": "Hata ayıklama yapılırken atlanacak dosya veya klasör adları, veya yol glob desenleri dizisi.",
			"browser.smartStep.description": "Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.",
			"browser.sourceMapPathOverrides.description": "Kaynak dosyalarının konumlarını, kaynak haritanın belirttiği yerden disk üzerindeki konumlarına yeniden yazmak için bir eşlemeler dizisi. Ayrıntılar için README dosyasına bakın.",
			"browser.sourceMaps.description": "JavaScript kaynak haritaları kullanın (varsa).",
			"browser.timeout.description": "Retry for this number of milliseconds to connect to the browser. Default is 10000 ms.",
			"browser.url.description": "Will search for a tab with this exact url and attach to it, if found",
			"browser.urlFilter.description": "Bu url'in bulunduğu bir sayfa arayacak ve bulunduysa ona bağlayacaktır. * joker karakterini içerebilir.",
			"browser.userDataDir.description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.",
			"browser.webRoot.description": "Bu, web sunucusu kök dizini için çalışma alanı mutlak yolunu belirtir. `/app.js` gibi yolların diskteki dosyalara çözümlenmesinde kullanılır. \"/\" için bir 'pathMapping' kısaltmasıdır",
			"chrome.attach.description": "Attach to an instance of Chrome already in debug mode",
			"chrome.attach.label": "Chrome: Attach",
			"chrome.label": "Chrome (preview)",
			"chrome.launch.description": "Launch Chrome to debug a URL",
			"chrome.launch.label": "Chrome: Launch",
			"configuration.automaticallyTunnelRemoteServer": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
			"configuration.debugByLinkOptions": "Options used when debugging open links clicked from inside the debug terminal. Can be set to \"false\" to disable this behavior.",
			"configuration.npmScriptLensLocation": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
			"configuration.suggestPrettyPrinting": "Whether to suggest pretty printing JavaScript code that looks minified when you step into it.",
			"configuration.terminalOptions": "Default launch options for the JavaScript debug terminal and npm scripts.",
			"configuration.usePreview": "Use the new in-preview JavaScript debugger for Node.js and Chrome.",
			"configuration.warnOnLongPrediction": "Whether a loading prompt should be shown if breakpoint prediction takes a while.",
			"debug.npm.edit": "Edit package.json",
			"debug.npm.noScripts": "No npm scripts found in your package.json",
			"debug.npm.noWorkspaceFolder": "You need to open a workspace folder to debug npm scripts.",
			"debug.npm.parseError": "Could not read {0}: {1}",
			"debug.npm.script": "Debug NPM Script",
			"debug.terminal.label": "Create JavaScript Debug Terminal",
			"debug.terminal.program.description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
			"debug.terminal.snippet.label": "Run \"npm start\" in a debug terminal",
			"debug.terminal.welcome": "[Node.js Debug Terminal](command:extension.pwa-node-debug.createDebuggerTerminal)\n\nYou can use the Node.js Debug Terminal to instantly debug JavaScript you run from the command line.",
			"edge.attach.description": "Attach to an instance of Edge already in debug mode",
			"edge.attach.label": "Edge: Attach",
			"edge.label": "Edge (preview)",
			"edge.launch.description": "Launch Edge to debug a URL",
			"edge.launch.label": "Edge: Launch",
			"edge.useWebView.description": "(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.",
			"errors.timeout": "{0}: timeout after {1}ms",
			"extension.description": "An extension for debugging Node.js programs and Chrome.",
			"extensionHost.label": "VS Code Extension Development (preview)",
			"extensionHost.launch.config.name": "Eklentiyi Başlat",
			"extensionHost.launch.env.description": "Eklenti sunucusuna iletilecek ortam değişkenleri.",
			"extensionHost.launch.runtimeExecutable.description": "VS Code'un mutlak yolu",
			"extensionHost.launch.stopOnEntry.description": "Başlatıldıktan sonra eklenti sunucusunu otomatik olarak durdur.",
			"extensionHost.snippet.launch.description": "Bir VS Code eklentisini hata ayıklama modunda çalıştır",
			"extensionHost.snippet.launch.label": "VS Code Eklentisi Geliştirme",
			"longPredictionWarning.disable": "Bir daha gösterme",
			"longPredictionWarning.message": "It's taking a while to configure your breakpoints. You can speed this up by updating the 'outFiles' in your launch.json.",
			"longPredictionWarning.noFolder": "No workspace folder open.",
			"longPredictionWarning.open": "Open launch.json",
			"node.address.description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
			"node.attach.attachExistingChildren.description": "Whether to attempt to attach to already-spawned child processes.",
			"node.attach.attachSpawnedProcesses.description": "Whether to set environment variables in the attached process to track spawned children.",
			"node.attach.config.name": "Bağla",
			"node.attach.continueOnAttach": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
			"node.attach.processId.description": "Eklenecek işlemin kimliği.",
			"node.attach.restart.description": "Try to reconnect to the program if we lose connection.",
			"node.console.title": "Node Hata Ayıklama Konsolu",
			"node.disableOptimisticBPs.description": "Bu dosya için bir kaynak haritası yüklenene kadar hiçbir dosyada kırılma noktaları ayarlamayın.",
			"node.label": "Node.js (preview)",
			"node.launch.args.description": "Programa iletilecek komut satırı argümanları.",
			"node.launch.autoAttachChildProcesses.description": "Yeni alt işlemlere hata ayıklayıcıyı otomatik olarak bağla.",
			"node.launch.config.name": "Başlat",
			"node.launch.console.description": "Hata ayıklama hedefinin başlatılacağı yer.",
			"node.launch.console.externalTerminal.description": "External terminal that can be configured via user settings",
			"node.launch.console.integratedTerminal.description": "VS Code'un entegre terminali",
			"node.launch.console.internalConsole.description": "VS Code Hata Ayıklama Konsolu (bir programdan girdi okumayı desteklemiyor)",
			"node.launch.cwd.description": "Hata ayıklama yapılan programın çalışma klasörünün mutlak yolu.",
			"node.launch.env.description": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
			"node.launch.envFile.description": "Ortam değişkenleri tanımlamalarını içeren bir dosyanın mutlak yolu.",
			"node.launch.logging": "Logging configuration",
			"node.launch.logging.cdp": "Path to the log file for Chrome DevTools Protocol messages",
			"node.launch.logging.dap": "Path to the log file for Debug Adapter Protocol messages",
			"node.launch.outputCapture.description": "Çıktı mesajları nereden yakalanacak: Hata ayıklama API'si veya stdout/stderr akışları.",
			"node.launch.program.description": "Programın mutlak yolu. Değer, package.json ve açık olan dosyalara bakılarak tahmin edilerek oluşturulmuştur.",
			"node.launch.restart.description": "Try to restart the program if it exits with a non-zero exit code.",
			"node.launch.runtimeArgs.description": "Çalışma zamanı yürütülebilir dosyasına iletilecek isteğe bağlı argümanlar.",
			"node.launch.runtimeExecutable.description": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.",
			"node.launch.runtimeVersion.description": "\"node\" çalışma ortamını yürütmek için Nvm Gerekir.",
			"node.launch.useWSL.deprecation": "'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.",
			"node.launch.useWSL.description": "Use Windows Subsystem for Linux.",
			"node.localRoot.description": "Programı içeren yerel klasörün yolu.",
			"node.pauseForSourceMap.description": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
			"node.port.description": "Bağlanacak hata ayıklama portu. Varsayılan 5858'tir.",
			"node.processattach.config.name": "İşleme Bağla",
			"node.remoteRoot.description": "Programı içeren uzak klasörün mutlak yolu.",
			"node.resolveSourceMapLocations.description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
			"node.showAsyncStacks.description": "Geçerli çağrı yığınına giden asenkron çağrıları gösterin.",
			"node.snippet.attach.description": "Çalışan bir node programına bağlayın",
			"node.snippet.attach.label": "Node.js: Bağla",
			"node.snippet.attachProcess.description": "Bağlanacak node işlemini seçmek için işlem seçicisini açın",
			"node.snippet.attachProcess.label": "Node.js: İşleme Bağla",
			"node.snippet.electron.description": "Electron ana işleminin hatalarını ayıkla",
			"node.snippet.electron.label": "Node.js: Electron Ana İşlemi",
			"node.snippet.gulp.description": "Gulp görevinin hatalarını ayıkla (projenizde gulp'ın yerel olarak yüklenmiş olduğundan emin olun)",
			"node.snippet.gulp.label": "Node.js: Gulp görevi",
			"node.snippet.launch.description": "Bir Node programını hata ayıklama modunda başlatın",
			"node.snippet.launch.label": "Node.js: Programı Başlat",
			"node.snippet.mocha.description": "Mocha testlerinin hatalarını ayıkla",
			"node.snippet.mocha.label": "Node.js: Mocha Testleri",
			"node.snippet.nodemon.description": "Kaynak değişimlerinde bir hata ayıklama oturumunu yeniden başlatmak için nodemon kullanın",
			"node.snippet.nodemon.label": "Node.js: Nodemon Kurulumu",
			"node.snippet.npm.description": "Launch a node program through an npm `debug` script",
			"node.snippet.npm.label": "Node.js: NPM ile Başlat",
			"node.snippet.remoteattach.description": "Bir uzak node programınının hata ayıklama portuna bağlayın",
			"node.snippet.remoteattach.label": "Node.js: Uzak Programa Bağla",
			"node.snippet.yo.description": "Debug yeoman generator (install by running `npm link` in project folder)",
			"node.snippet.yo.label": "Node.js: Yeoman oluşturucu",
			"node.sourceMapPathOverrides.description": "Kaynak dosyalarının konumlarını, kaynak haritanın belirttiği yerden disk üzerindeki konumlarına yeniden yazmak için bir eşlemeler dizisi.",
			"node.sourceMaps.description": "JavaScript kaynak haritaları kullanın (varsa).",
			"node.stopOnEntry.description": "Başlatıldıktan sonra programı otomatik olarak durdur.",
			"node.timeout.description": "Node.js'ye yeniden bağlanmak için bu sayıda milisaniye kadar tekrar deneyin. Varsayılan 10000 ms'dir.",
			"outFiles.description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
			"pretty.print.script": "Pretty print for debugging",
			"profile.start": "Take Performance Profile",
			"profile.stop": "Stop Performance Profile",
			"remove.browser.breakpoint": "Remove Browser Breakpoint",
			"remove.browser.breakpoint.all": "Remove All Browser Breakpoints",
			"skipFiles.description": "An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.",
			"smartStep.description": "Orijinal kaynağa geri eşlenemeyen oluşturulmuş kodlar üzerinde otomatik olarak adım adım ilerleyin.",
			"start.with.stop.on.entry": "Start Debugging and Stop on Entry",
			"toggle.skipping.this.file": "Bu Dosyayı Atlamayı Aç/Kapa",
			"trace.boolean.description": "Trace may be set to 'true' to write diagnostic logs to the disk.",
			"trace.console.description": "Configures whether logs are also returned to the debug console.",
			"trace.description": "Configures what diagnostic output is produced.",
			"trace.level.description": "Configures the level of logs recorded.",
			"trace.logFile.description": "Configures where on disk logs are written.",
			"trace.stdio.description": "Whether to return trace data from the launched application or browser.",
			"trace.tags.description": "Configures what types of logs are recorded."
		}
	}
}