{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Aggiungi punto di interruzione browser",
			"attach.node.process": "Collega a processo Node (anteprima)",
			"browser.address.description": "Indirizzo TCP/IP della porta di debug",
			"browser.baseUrl.description": "URL di base per la risoluzione di baseUrl di percorsi. baseURL viene tagliato quando si esegue il mapping di URL ai file su disco. L'impostazione predefinita è il dominio dell'URL di avvio.",
			"browser.cwd.description": "Directory di lavoro facoltativa per l'eseguibile di runtime.",
			"browser.disableNetworkCache.description": "Controlla se ignorare la cache di rete per ogni richiesta",
			"browser.env.description": "Dizionario facoltativo di coppie chiave-valore di ambiente per il browser.",
			"browser.file.description": "File HTML locale da aprire nel browser",
			"browser.inspectUri.description": "Formato da usare per riscrivere inspectUri. Si tratta di una stringa modello che interpola le chiavi in `{curlyBraces}`. Le chiavi disponibili sono:\n - `url.*` è l'indirizzo analizzato dell'applicazione in esecuzione, ad esempio `{url.port}`, `{url.hostname}`\n - `port` è la porta di debug su cui Chrome rimane in ascolto.\n - `browserInspectUri` è l'URI di controllo nel browser avviato\n - `wsProtocol` è il protocollo WebSocket suggerito. È impostato su `wss` se l'URL originale è `https`; altrimenti è `ws`.",
			"browser.pathMapping.description": "Mapping di URL/percorsi di cartelle locali per risolvere gli script nel browser in script su disco",
			"browser.port.description": "Porta da usare per il debug remoto del browser.",
			"browser.runtimeArgs.description": "Argomenti facoltativi passati all'eseguibile del runtime.",
			"browser.runtimeExecutable.description": "Corrisponde a 'canary', 'stable', 'custom' o al percorso dell'eseguibile del browser. L'impostazione custom si riferisce a un wrapper o a una build personalizzata oppure alla variabile di ambiente CHROME_PATH.",
			"browser.server.description": "Consente di configurare un server Web per l'avvio. Accetta la stessa configurazione dell'attività di avvio 'node'.",
			"browser.skipFiles.description": "Una matrice di nomi di file, nomi di cartelle, o modelli di glob, da ignorare durante il debug.",
			"browser.smartStep.description": "Esegue automaticamente un'istruzione alla volta delle righe non mappate in file con mapping del codice sorgente, ad esempio il codice che TypeScript produce automaticamente quando esegue la compilazione di async/await o di altre funzionalità per compatibilità con versioni precedenti.",
			"browser.sourceMapPathOverrides.description": "Set di mapping per riscrivere i percorsi dei file di origine dal percorso indicato nel mapping di origine al relativo percorso sul disco. Per dettagli, vedere il file README.",
			"browser.sourceMaps.description": "Usa i source map JavaScript (se esistenti).",
			"browser.timeout.description": "Numero di millisecondi in cui vengono effettuati i tentativi di connessione al browser. Il valore predefinito è 10000 ms.",
			"browser.url.description": "Cerca una scheda con l'URL esatto e la collega ad esso se viene trovata",
			"browser.urlFilter.description": "Cerca una pagina con questo url e lo allega ad essa, se trovato. Può avere caratteri jolly \"*\".",
			"browser.userDataDir.description": "Per impostazione predefinita, il browser viene avviato con un profilo utente separato in una cartella temporanea. Usare questa opzione per eseguirne l'override. Impostare su false per avviare con il profilo utente predefinito.",
			"browser.webRoot.description": "Specifica il percorso assoluto dell'area di lavoro nella root del webserver. Utilizzato per risolvere i percorsi come `/app.js` al file su disco. Forma abbreviata di un pathMapping per \"/\"",
			"chrome.attach.description": "Si collega a un'istanza di Chrome già in modalità di debug",
			"chrome.attach.label": "Chrome: Collega",
			"chrome.label": "Chrome (anteprima)",
			"chrome.launch.description": "Avvia Chrome per eseguire il debug di un URL",
			"chrome.launch.label": "Chrome: Avvia",
			"configuration.npmScriptLensLocation": "Indica se visualizzare una finestra di CodeLens \"Esegui\" ed \"Esegui debug\" negli script npm. Può trovarsi in \"all\", negli script, in \"top\" della sezione script o in \"never\".",
			"configuration.suggestPrettyPrinting": "Indica se suggerire la riformattazione del codice JavaScript che sembra ridotto quando si eseguono le istruzioni.",
			"configuration.terminalOptions": "Opzioni di avvio predefinite per gli script npm e del terminale di debug di JavaScript.",
			"configuration.usePreview": "Usa il nuovo debugger JavaScript in anteprima per Node.js e Chrome.",
			"configuration.warnOnLongPrediction": "Indica se visualizzare un prompt di caricamento se la previsione dei punti di interruzione richiede tempo.",
			"debug.npm.edit": "Modifica package.json",
			"debug.npm.noScripts": "Nel file package.json non sono stati trovati script npm",
			"debug.npm.noWorkspaceFolder": "Per eseguire il debug di script npm, è necessario aprire una cartella dell'area di lavoro.",
			"debug.npm.parseError": "Non è stato possibile leggere {0}: {1}",
			"debug.npm.script": "Script npm di debug",
			"debug.terminal.label": "Crea terminale di debug di JavaScript",
			"debug.terminal.program.description": "Comando da eseguire nel terminale avviato. Se non viene specificato, il terminale verrà aperto senza avviare alcun programma.",
			"debug.terminal.snippet.label": "Esegui \"npm start\" in un terminale di debug",
			"edge.attach.description": "Si collega a un'istanza di Edge già in modalità di debug",
			"edge.attach.label": "Edge: Collega",
			"edge.label": "Edge (anteprima)",
			"edge.launch.description": "Avvia Edge per eseguire il debug di un URL",
			"edge.launch.label": "Edge: Avvia",
			"edge.useWebView.description": "(Solo Edge (Chromium)) Quando è 'true', il debugger considererà l'eseguibile di runtime come un'applicazione host che contiene una webview e consentirà di eseguire il debug del contenuto dello script della webview.",
			"errors.timeout": "{0}: timeout dopo {1} ms",
			"extension.description": "Estensione per il debug di programmi Node.js e di Chrome.",
			"extensionHost.label": "Sviluppo di estensioni per VS Code (anteprima)",
			"extensionHost.launch.config.name": "Avvia estensione",
			"extensionHost.launch.env.description": "Variabili di ambiente passate all'host dell'estensione.",
			"extensionHost.launch.runtimeExecutable.description": "Percorso assoluto di Visual Studio Code.",
			"extensionHost.launch.stopOnEntry.description": "Arresta automaticamente l'host dell'estensione dopo l'avvio.",
			"extensionHost.snippet.launch.description": "Avvia un'estensione Visual Studio Code in modalità di debug",
			"extensionHost.snippet.launch.label": "Sviluppo di estensioni per Visual Studio Code",
			"longPredictionWarning.disable": "Non visualizzare più questo messaggio",
			"longPredictionWarning.message": "La configurazione dei punti di interruzione sta richiedendo più tempo del previsto. Per velocizzare l'operazione, aggiornare 'outFiles' nel file launch.json.",
			"longPredictionWarning.noFolder": "Non ci sono cartelle dell'area di lavoro aperte.",
			"longPredictionWarning.open": "Apri launch.json",
			"node.address.description": "Indirizzo TCP/IP del processo di cui eseguire il debug. Il valore predefinito è 'localhost'.",
			"node.attach.attachExistingChildren.description": "Indica se effettuare un tentativo di collegamento a processi figlio già generati.",
			"node.attach.attachSpawnedProcesses.description": "Indica se impostare le variabili di ambiente nel processo collegato per tenere traccia degli elementi figlio generati.",
			"node.attach.config.name": "Collega",
			"node.attach.continueOnAttach": "Se è true, i programmi avviati e in attesa in `--inspect-brk` verranno ripresi automaticamente",
			"node.attach.processId.description": "ID del processo a cui collegarsi.",
			"node.attach.restart.description": "Prova a riconnettersi al programma in caso di perdita della connessione.",
			"node.console.title": "Console di debug nodo",
			"node.disableOptimisticBPs.description": "Non imposta punti di interruzione in un file finché non viene caricato un mapping di origine per tale file.",
			"node.label": "Node.js (anteprima)",
			"node.launch.args.description": "Argomenti della riga di comando passati al programma.",
			"node.launch.autoAttachChildProcesses.description": "Collega automaticamente il debugger ad un nuovo processo figlio.",
			"node.launch.config.name": "Avvia",
			"node.launch.console.description": "Indica dove avviare la destinazione di debug.",
			"node.launch.console.externalTerminal.description": "Terminale esterno che può essere configurato tramite impostazioni utente",
			"node.launch.console.integratedTerminal.description": "terminale integrato di Visual Studio Code",
			"node.launch.console.internalConsole.description": "console di debug di Visual Studio Code (che non include il supporto per leggere dati di input da un programma)",
			"node.launch.cwd.description": "Percorso assoluto della directory di lavoro del programma di cui eseguire il debug.",
			"node.launch.env.description": "Variabili di ambiente passate al programma. Con il valore `null` la variabile viene rimossa dall'ambiente.",
			"node.launch.envFile.description": "Percorso assoluto di un file che contiene le definizioni delle variabili di ambiente.",
			"node.launch.logging": "Configurazione della registrazione",
			"node.launch.logging.cdp": "Percorso del file di log per i messaggi di Chrome DevTools Protocol",
			"node.launch.logging.dap": "Percorso del file di log per i messaggi di Debug Adapter Protocol",
			"node.launch.outputCapture.description": "Indica da dove acquisire i messaggi di output: API di debug o flussi stdout/stderr.",
			"node.launch.program.description": "Percorso assoluto del programma. Per ipotizzare il valore generato, esaminare package.json e i file aperti. Modificare questo attributo.",
			"node.launch.restart.description": "Provare a riavviare il programma se il codice di uscita restituito è diverso da zero.",
			"node.launch.runtimeArgs.description": "Argomenti facoltativi passati all'eseguibile del runtime.",
			"node.launch.runtimeExecutable.description": "Runtime da usare. Corrisponde a un percorso assoluto o al nome di un runtime disponibile in PATH. Se viene omesso, si presuppone che sia `node`.",
			"node.launch.runtimeVersion.description": "Versione del runtime di `node` da usare. Richiede 'nvm'.",
			"node.launch.useWSL.deprecation": "'useWSL' è deprecato e il relativo supporto verrà rimosso. Usare l'estensione 'Remote - WSL'.",
			"node.launch.useWSL.description": "Usa il sottosistema Windows per Linux.",
			"node.localRoot.description": "Percorso della directory locale che contiene il programma.",
			"node.pauseForSourceMap.description": "Indica se attendere il caricamento dei source map per ogni script in arrivo. Questa impostazione implica un sovraccarico delle prestazioni e può essere disabilitata senza problemi quando non viene eseguita su disco, purché `rootPath` non sia disabilitato.",
			"node.port.description": "Porta di debug a cui connettersi. Il valore predefinito è 5858.",
			"node.processattach.config.name": "Collega a processo",
			"node.remoteRoot.description": "Percorso assoluto della directory remota che contiene il programma.",
			"node.resolveSourceMapLocations.description": "Elenco di criteri di corrispondenza minima per le posizioni (cartelle e URL) in cui è possibile usare source map per risolvere file locali. Può essere usato per evitare di passare erroneamente al codice con source mapping esterno. Per escludere i criteri, aggiungere il prefisso \"!\". Può essere impostato su una matrice vuota o su Null per evitare la restrizione.",
			"node.showAsyncStacks.description": "Visualizza le chiamate asincrone che hanno portato allo stack di chiamate corrente.",
			"node.snippet.attach.description": "Collega a un programma node in esecuzione",
			"node.snippet.attach.label": "Node.js: collega",
			"node.snippet.attachProcess.description": "Apre l'utilità di selezione processi per selezionare il processo Node a cui collegarsi",
			"node.snippet.attachProcess.label": "Node.js: collega al processo",
			"node.snippet.electron.description": "Esegue il debug del processo principale Electron",
			"node.snippet.electron.label": "Node.js: Processo principale Electron",
			"node.snippet.gulp.description": "Esegue il debug dell'attività gulp (assicurarsi che nel progetto sia installata un'istanza locale di gulp)",
			"node.snippet.gulp.label": "Node.js: attività gulp",
			"node.snippet.launch.description": "Avvia un programma Node in modalità di debug",
			"node.snippet.launch.label": "Node.js: avvia il programma",
			"node.snippet.mocha.description": "Esegue il debug di test Mocha",
			"node.snippet.mocha.label": "Node.js: test Mocha",
			"node.snippet.nodemon.description": "Usa nodemon per riavviare una sessione di debug in seguito a modifiche dell'origine",
			"node.snippet.nodemon.label": "Node.js: configurazione di nodemon",
			"node.snippet.npm.description": "Avvia un programma Node tramite uno script `debug` di npm",
			"node.snippet.npm.label": "Node.js: avvio tramite npm",
			"node.snippet.remoteattach.description": "Collega alla porta di debug di un programma Node remoto",
			"node.snippet.remoteattach.label": "Node.js: collega a programma remoto",
			"node.snippet.yo.description": "Esegue il debug del generatore yeoman (per installare, eseguire `npm link` nella cartella del progetto)",
			"node.snippet.yo.label": "Node.js: generatore yeoman",
			"node.sourceMapPathOverrides.description": "Set di mapping per riscrivere i percorsi dei file di origine dal percorso indicato nel mapping di origine al relativo percorso su disco.",
			"node.sourceMaps.description": "Usa i source map JavaScript (se esistenti).",
			"node.stopOnEntry.description": "Arresta automaticamente il programma dopo l'avvio.",
			"node.timeout.description": "Numero di millisecondi in cui vengono effettuati i tentativi di connessione a Node.js. Il valore predefinito è 10000 ms.",
			"outFiles.description": "Se sono abilitati i source map, questi criteri GLOB specificano i file JavaScript generati. Se un criterio inizia con `!`, i file sono esclusi. Se non è specificato, il codice generato dovrebbe trovarsi nella stessa directory dell'origine.",
			"pretty.print.script": "Riformattazione per il debug",
			"remove.browser.breakpoint": "Rimuovi punto di interruzione browser",
			"remove.browser.breakpoint.all": "Rimuovi tutti i punti di interruzione browser",
			"skipFiles.description": "Matrice di criteri GLOB per i file da ignorare durante il debug. Il criterio `<node_internals>/**` consente di trovare una corrispondenza per tutti i moduli Node.js interni.",
			"smartStep.description": "Esegue automaticamente un'istruzione alla volta del codice generato che non può essere mappato all'origine.",
			"start.with.stop.on.entry": "Avvia il debug e arrestalo in corrispondenza della voce",
			"toggle.skipping.this.file": "Attiva/disattiva Ignora questo file",
			"trace.boolean.description": "L'analisi può essere impostata su 'true' per scrivere i log di diagnostica sul disco.",
			"trace.console.description": "Consente di configurare se nella console di debug vengono restituiti anche i log.",
			"trace.description": "Consente di configurare il tipo di output diagnostica prodotto.",
			"trace.level.description": "Consente di configurare il livello di log registrati.",
			"trace.logFile.description": "Consente di configurare il percorso in cui vengono scritti i log del disco.",
			"trace.tags.description": "Consente di configurare i tipi di log da registrare."
		}
	}
}