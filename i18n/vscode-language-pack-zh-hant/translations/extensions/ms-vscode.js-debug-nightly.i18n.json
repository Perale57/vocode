{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "新增瀏覽器中斷點",
			"attach.node.process": "附加至節點處理序 (預覽)",
			"browser.address.description": "偵錯連接埠 TCP/IP 位址",
			"browser.baseUrl.description": "用於解析路徑 baseUrl 的基底 URL。將 URL 對應至磁碟上的檔案時，baseURL 會受到修剪。預設為啟動 URL 網域。",
			"browser.cwd.description": "在執行階段可執行檔的選擇性工作目錄",
			"browser.disableNetworkCache.description": "控制是否跳過每次要求的網路快取",
			"browser.env.description": "瀏覽器環境索引鍵/值組的選用字典。",
			"browser.file.description": "本地端的 html 檔案開啟於瀏覽器",
			"browser.includeDefaultArgs.description": "啟動中是否將包含預設的瀏覽器啟動引數 (以停用可能會讓偵錯更加困難的功能)。",
			"browser.inspectUri.description": "用於重寫 inspectUri 的格式: 這是在 `{curlyBraces}` 中插入索引鍵的範本字串。可用的索引鍵包括:\n - `url.*` 是正在執行之應用程式的剖析位址。例如 `{url.port}`、`{url.hostname}`\n - `port` 是 Chrome 聆聽的偵錯連接埠。\n - `browserInspectUri` 是已啟動瀏覽器的偵測器 URI。\n - `wsProtocol` 是提示的 WebSocket 通訊協定。如果原始 URL 為 `https` 或 `ws` 等其他項目，此項目會設定為 `wss`。",
			"browser.pathMapping.description": "URL/路徑對本機資料夾的對應，可將瀏覽器中的指令碼解析至磁碟上的指令碼",
			"browser.port.description": "要用於遠端偵錯瀏覽器的連接埠。",
			"browser.runtimeArgs.description": "傳遞給執行階段可執行檔的選擇性引數。",
			"browser.runtimeExecutable.description": "瀏覽器可執行檔的 'canary'、'stable'、'custom' 或路徑。自訂表示自訂包裝函式、自訂組建或 CHROME_PATH 環境變數。",
			"browser.server.description": "設定要啟動的網頁伺服器。會採用與 'node' 啟動工作相同的組態。",
			"browser.skipFiles.description": "偵錯時要跳過的檔案、資料夾名稱或路徑 Glob 的陣列。",
			"browser.smartStep.description": "自動跳過已對應來源檔案中的未對應行。例如，向下編譯 (Downcompiling) async/await 或其他功能時，TypeScript 自動產生的程式碼。",
			"browser.sourceMapPathOverrides.description": "依據 sourcemap 指示重新寫入一組來源檔案位置對應至磁碟上的位置。如需詳細資訊，請參閱 README。",
			"browser.sourceMaps.description": "使用 JavaScript 來源對應 (如果存在)。",
			"browser.timeout.description": "重試此毫秒數以連線至瀏覽器。預設為 10000 毫秒。",
			"browser.url.description": "將會搜尋具有此明確 URL 的索引標籤，並在找到時加以附加",
			"browser.urlFilter.description": "會以此 URL 搜尋頁面，如果有找到的話就將 URL 附加到頁面上。可以有 * 萬用字元。",
			"browser.userDataDir.description": "根據預設，瀏覽器會以暫存資料夾中的單獨使用者設定檔啟動。使用此選項加以覆寫。設定為 false 來以您的預設使用者設定檔啟動。",
			"browser.webRoot.description": "這會將工作區絕對路徑指定到 webserver 根。用來將類似 `/app.js` 的路徑解析到磁碟上的檔案。\"/\" pathMapping 的速記",
			"chrome.attach.description": "附加至已經進入偵錯模式的 Chrome 執行個體",
			"chrome.attach.label": "Chrome: 附加",
			"chrome.label": "Chrome (預覽)",
			"chrome.launch.description": "啟動 Chrome 以偵錯 URL",
			"chrome.launch.label": "Chrome: 啟動",
			"configuration.automaticallyTunnelRemoteServer": "偵測遠端 Web 應用程式時，設定是否自動打開遠端伺服器到本機電腦的通道。",
			"configuration.debugByLinkOptions": "在偵錯終端機內按一下偵錯開啟連結時所使用的選項。可設為 \"false\"，停用此行為。",
			"configuration.npmScriptLensLocation": "\"Run\" 與 \"Debug\" 程式碼濾鏡應在您 npm 指令碼中顯示的位置。可以是「全部」、指令碼、指令碼區段的「頂端」或「永不」。",
			"configuration.suggestPrettyPrinting": "是否要在您進入時建議看起來已縮小的美化顯示 JavaScript 程式碼。",
			"configuration.terminalOptions": "JavaScript 偵錯終端機和 npm 指令碼的預設啟動選項。",
			"configuration.usePreview": "使用 Node.js 和 Chrome 適用的全新預覽版 JavaScript 偵錯工具。",
			"configuration.warnOnLongPrediction": "如果中斷點預測需要一段時間，是否應顯示載入提示。",
			"debug.npm.edit": "編輯 package.json",
			"debug.npm.noScripts": "未在您的 package.json 找到 npm 指令碼",
			"debug.npm.noWorkspaceFolder": "您需要開啟工作區資料夾，才能偵錯 npm 指令碼。",
			"debug.npm.parseError": "無法讀取 {0}: {1}",
			"debug.npm.script": "偵錯 NPM 指令碼",
			"debug.terminal.label": "建立 JavaScript 偵錯終端機",
			"debug.terminal.program.description": "要在啟動終端機執行的指令。如未提供，終端機將不會在開啟時啟動程式。",
			"debug.terminal.snippet.label": "在偵錯終端機執行 \"npm start\"",
			"debug.terminal.welcome": "[Node.js 偵測終端機](command:extension.pwa-node-debug.createDebuggerTerminal)\n\n您可以使用 Node.js 偵測終端機，立即從命令列偵測您執行的 JavaScript。",
			"edge.attach.description": "附加至已經進入偵錯模式的 Microsoft Edge 執行個體",
			"edge.attach.label": "Microsoft Edge: 附加",
			"edge.label": "Microsoft Edge (預覽)",
			"edge.launch.description": "啟動 Microsoft Edge 來偵錯 URL",
			"edge.launch.label": "Microsoft Edge: 啟動",
			"edge.useWebView.description": "(Microsoft Edge (Chromium) 專用) 為 'true' 時，偵錯工具會將執行階段可執行檔視為包含 WebView 的主機應用程式，以便您偵錯 WebView 指令碼內容。",
			"errors.timeout": "{0}: 經過 {1} 毫秒後逾時",
			"extension.description": "用於偵錯 Node.js 程式和 Chrome 的延伸模組。",
			"extensionHost.label": "VS Code 延伸模組開發 (預覽)",
			"extensionHost.launch.config.name": "啟動延伸模組",
			"extensionHost.launch.env.description": "已將環境變數傳遞到延伸模組主機。",
			"extensionHost.launch.runtimeExecutable.description": "VS Code 的絕對路徑。",
			"extensionHost.launch.stopOnEntry.description": "在啟動後自動停止延伸主機。",
			"extensionHost.snippet.launch.description": "在偵錯模式中啟動 VS Code 延伸模組",
			"extensionHost.snippet.launch.label": "VS Code 延伸模組開發",
			"longPredictionWarning.disable": "不要再顯示",
			"longPredictionWarning.message": "設定中斷點需要一段時間。您可以透過更新 launch.json 中的 'outFiles' 來加快速度。",
			"longPredictionWarning.noFolder": "未開啟工作區資料夾。",
			"longPredictionWarning.open": "開啟 launch.json",
			"node.address.description": "要偵錯之處理序的 TCP/IP 位址。預設為 'localhost'。",
			"node.attach.attachExistingChildren.description": "是否要嘗試附加至已衍生的子處理序。",
			"node.attach.attachSpawnedProcesses.description": "是否要在附加的處理序中設定環境變數，來追蹤繁衍的子系。",
			"node.attach.config.name": "附加",
			"node.attach.continueOnAttach": "如果為 true，我們會自動繼續啟動的程式並等待 `--inspect-brk`",
			"node.attach.processId.description": "要附加的處理序識別碼。",
			"node.attach.restart.description": "如果我們失去連線，請嘗試重新連線到程式。",
			"node.console.title": "節點偵錯主控台",
			"node.disableOptimisticBPs.description": "在任何檔案載入 sourcemap 之前，不要在該檔案中設定中斷點。",
			"node.label": "Node.js (預覽)",
			"node.launch.args.description": "傳遞給程式的命令列引數。",
			"node.launch.autoAttachChildProcesses.description": "自動附加偵錯工具至新的子處理序。",
			"node.launch.config.name": "啟動",
			"node.launch.console.description": "啟動偵錯目標的位置。",
			"node.launch.console.externalTerminal.description": "可透過使用者設定進行外部終端機的設定。",
			"node.launch.console.integratedTerminal.description": "VS Code 的整合式終端機",
			"node.launch.console.internalConsole.description": "VS Code 偵錯主控台 (無法從程式讀取輸入)",
			"node.launch.cwd.description": "程式工作目錄的絕對路徑 (該程式正在進行偵錯)。",
			"node.launch.env.description": "已將環境變數傳遞到程式。值 `null` 從環境變數中移除變數。",
			"node.launch.envFile.description": "包含環境變數定義之檔案的絕對路徑。",
			"node.launch.logging": "記錄組態",
			"node.launch.logging.cdp": "Chrome DevTools Protocol 訊息的記錄檔路徑",
			"node.launch.logging.dap": "偵錯配接器通訊協定訊息的記錄檔路徑",
			"node.launch.outputCapture.description": "從該處擷取輸出訊息: 偵錯 API 或 StdOut/STDERR 資料流。",
			"node.launch.program.description": "程式的絕對路徑。透過查看 package.json 及開啟的檔案猜測產生的值。編輯此屬性。",
			"node.launch.restart.description": "如果程式以非零的結束代碼結束，請嘗試重新啟動程式。",
			"node.launch.runtimeArgs.description": "傳遞給執行階段可執行檔的選擇性引數。",
			"node.launch.runtimeExecutable.description": "要使用的執行階段。可以是 PATH 上可用執行階段的絕對路徑或名稱。若省略，即假設為 `node`。",
			"node.launch.runtimeVersion.description": "'node' 版本的執行階段使用中。需要 `nvm`。",
			"node.launch.useWSL.deprecation": "'useWSL' 已淘汰且其支援將受到捨棄。請改為使用 'Remote - WSL' 延伸模組。",
			"node.launch.useWSL.description": "使用 Windows 子系統 Linux 版。",
			"node.localRoot.description": "包含程式的本機目錄路徑。",
			"node.pauseForSourceMap.description": "是否要等待各個連入指令碼的來源對應載入。這會有效能額外負荷，且只要未停用 `rootPath`，就能在磁碟上執行時安全停用。",
			"node.port.description": "要附加到的目標偵錯連接埠。預設值為 5858。",
			"node.processattach.config.name": "附加至處理序",
			"node.remoteRoot.description": "包含程式的遠端目錄絕對路徑。",
			"node.resolveSourceMapLocations.description": "位置 (資料夾和 URL) 的 minimatch 模式清單，其中來源對應可用於解析本機檔案。您可以利用此清單來避免外部來源對應程式碼中出現錯誤分行。在模式名稱開頭加上 \"!\" 可予以排除。可設定為空白陣列或 null 來避免限制。",
			"node.showAsyncStacks.description": "顯示導致目前呼叫堆疊的非同步呼叫。",
			"node.snippet.attach.description": "附加至Node處理程序",
			"node.snippet.attach.label": "Node.js: 附加",
			"node.snippet.attachProcess.description": "開啟處理序選擇器以選取要連結的目標節點處理序",
			"node.snippet.attachProcess.label": "Node.js: 連結到處理序",
			"node.snippet.electron.description": "對 Electron 主要處理序偵錯",
			"node.snippet.electron.label": "Node.js: Electron 主要",
			"node.snippet.gulp.description": "對 Gulp 工作偵錯 (確認您的專案中已安裝本機 Gulp)",
			"node.snippet.gulp.label": "Node.js: Gulp 工作",
			"node.snippet.launch.description": "在偵錯模式中啟動節點程式",
			"node.snippet.launch.label": "Node.js: 啟動程式",
			"node.snippet.mocha.description": "對 mocha 測試偵錯",
			"node.snippet.mocha.label": "Node.js: Mocha 測試",
			"node.snippet.nodemon.description": "使用 nodemon 在來源變更時重新啟動偵錯工作階段",
			"node.snippet.nodemon.label": "Node.js: Nodemon 設定",
			"node.snippet.npm.description": "透過 npm `debug` 指令碼啟動節點程式",
			"node.snippet.npm.label": "Node.js: 透過 NPM 啟動",
			"node.snippet.remoteattach.description": "附加到遠端節點程式的偵錯連接埠",
			"node.snippet.remoteattach.label": "Node.js: 附加到遠端程式",
			"node.snippet.yo.description": "偵錯 Yeoman 產生器 (透過執行專案資料夾中的 `npm link` 進行安裝)",
			"node.snippet.yo.label": "Node.js: Yeoman 產生器",
			"node.sourceMapPathOverrides.description": "依據 sourcemap 指示重新寫入一組來源檔案位置對應至磁碟上的位置。",
			"node.sourceMaps.description": "使用 JavaScript 來源對應 (如果存在)。",
			"node.stopOnEntry.description": "在啟動後自動停止程式。",
			"node.timeout.description": "重試連接到 Node.js 前要等待的毫秒數。預設值為 10000 毫秒。",
			"outFiles.description": "若已啟用來源對應，這些 Glob 模式會指定所產生的 JavaScript 檔案。若模式開頭為 `!`，會排除檔案。若未指定，所產生的程式碼應在與來源相同的目錄中。",
			"pretty.print.script": "偵錯的美化顯示",
			"profile.start": "採用效能設定檔",
			"profile.stop": "停止效能設定檔",
			"remove.browser.breakpoint": "移除瀏覽器中斷點",
			"remove.browser.breakpoint.all": "刪除所有瀏覽器中斷點",
			"skipFiles.description": "偵錯時要跳過的檔案 Glob 模式陣列。該模式 `<node_internals>/**` 會比對所有內部 Node.js 模組。",
			"smartStep.description": "自動逐步所執行產生無法對應回原始碼的程式碼。",
			"start.with.stop.on.entry": "啟動偵錯並停止在進入點",
			"toggle.skipping.this.file": "略過此檔案",
			"trace.boolean.description": "追蹤可設為 'true' 來將診斷記錄寫入磁碟。",
			"trace.console.description": "設定記錄是否會一併傳回偵錯主控台。",
			"trace.description": "設定產生的診斷輸出。",
			"trace.level.description": "設定記錄的記錄層級。",
			"trace.logFile.description": "設定要寫入磁碟記錄的位置。",
			"trace.stdio.description": "是否從啟動的應用程式或是瀏覽器傳回追蹤資料。",
			"trace.tags.description": "設定要記錄的記錄類型。"
		}
	}
}